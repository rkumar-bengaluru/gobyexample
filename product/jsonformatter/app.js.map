{"version":3,"sources":["webpack://RJsonParser/webpack/universalModuleDefinition","webpack://RJsonParser/./src/app.js","webpack://RJsonParser/./src/io/CharStream.js","webpack://RJsonParser/./src/io/IOString.js","webpack://RJsonParser/./src/io/Reader.js","webpack://RJsonParser/./src/io/StringReader.js","webpack://RJsonParser/./src/json/JsonBoolean.js","webpack://RJsonParser/./src/json/JsonList.js","webpack://RJsonParser/./src/json/JsonMap.js","webpack://RJsonParser/./src/json/JsonNull.js","webpack://RJsonParser/./src/json/JsonNumber.js","webpack://RJsonParser/./src/json/JsonObject.js","webpack://RJsonParser/./src/json/JsonString.js","webpack://RJsonParser/./src/logger/logger.js","webpack://RJsonParser/./src/parser/RJsonAbsParser.js","webpack://RJsonParser/./src/parser/RJsonConstants.js","webpack://RJsonParser/./src/parser/RJsonLexer.js","webpack://RJsonParser/./src/parser/RJsonParser.js","webpack://RJsonParser/./src/parser/RJsonParserError.js","webpack://RJsonParser/./src/parser/RJsonToken.js","webpack://RJsonParser/./src/parser/RJsonTokenMgrError.js"],"names":["root","factory","exports","module","define","amd","this","editor","example","init","document","getElementById","classList","toggle","jsonObj","getValue","parse","appendable","destination","formatJsonToString","setValue","formatInputString","formatJsonToHtml","innerHTML","formatHtml","addEventListener","toUnformattedString","compress","e","console","log","stack","editorEl","CodeMirror","fromTextArea","lineNumbers","lineWrapping","mode","matchBrackets","setSize","JSON","stringify","format","logger","CharStream","maxBufSize","constructor","stream","maxNextCharInd","nextCharInd","bufline","bufcolumn","column","line","bufpos","bufsize","available","inBuf","prevCharIsCR","prevCharIsLF","tabSize","tokenBegin","nextCharBuf","Array","buffer","inputStream","beginToken","readFromBuffer","readChar","c","adjustBuffSize","readByte","checkSpecial","updateLineColumn","fillBuff","debug","charCodeAt","i","read","close","Error","backup","olumn","amount","expandBuff","spaceDetected","getImage","response","toString","IOString","chars","offset","count","j","value","ccode","code","join","Reader","newInput","TypeError","prototype","getChars","input","length","next","mark","cbuf","len","srcBegin","srcEnd","dst","dstBegin","ensureOpen","StringReader","super","n","Math","min","JsonBoolean","isKey","currentLevel","_input","JsonList","add","jsonObject","push","size","forEach","element","cAppendable","tabs","_root","JsonMap","put","jsonObjectKey","jsonObjectValue","set","info","key","keyAppendable","valueAppendable","keyValue","JsonNumber","JsonObject","_isKey","_keyValue","_rawInput","newRoot","newKey","raw","newValue","JsonString","removeSpecialChars","tmp","r","concat","msg","RJsonAbsParser","rinput","startNow","undefined","reader","lexer","token","jj_nt","getNextToken","jj_gen","jj_la1","jj_la1_0","jj_kind","nativeNumbers","objectKey","o","kind","STRING_SINGLE_EMPTY","STRING_DOUBLE_EMPTY","STRING_SINGLE_NONEMPTY","STRING_DOUBLE_NONEMPTY","string","SYMBOL","symbol","NULL","nullValue","NUMBER_INTEGER","NUMBER_DECIMAL","TRUE","FALSE","booleanValue","number","jj_consume_token","BRACE_CLOSE","s","doubleQuoteString","singleQuoteString","image","sjj_gen","b","x","t","RJsonConstants","EOF","C_SINGLE_COMMENT","C_MULTILINE_COMMENT","SH_SINGLE_COMMENT","WHITESPACE","EOL","COMMA","BRACE_OPEN","COLON","BRACKET_OPEN","BRACKET_CLOSE","ZERO","DIGIT_NONZERO","DIGIT","QUOTE_DOUBLE","QUOTE_SINGLE","STRING_SINGLE_BODY","STRING_DOUBLE_BODY","DEFAULT","LEXICAL_ERROR","tokenImage","RJsonLexer","istream","input_stream","curChar","matchedKind","matchedPos","toToken","curLexState","strLiteralImages","matchedToken","curPos","EOFLoop","fillToken","analyzeCurrentCharacter","error_line","getEndLine","error_column","getEndColumn","error_after","EOFSeen","e1","consume_char","stopAtPos","moveChar01","moveChar","findNumber","isDigit","startState","findStringLiteral","active0","target","moveChar02","old0","moveChar03","moveChar04","pos","checkForSpace","beginLine","getBeginLine","beginColumn","getBeginColumn","endLine","endColumn","im","RJsonParser","toReturn","anything","rawInput","ensureEOF","object","list","map","Map","label_1","label_2","oldToken","generateParseException","k","l","jj_expentries","la1tokens","jj_expentry","exptokseq","getMessage","runParser","RJsonParserError","_currentTokenVal","_expectedTokenSequencesVal","_tokenImageVal","name","currentToken","expectedTokenSequences","eol","maxSize","expected","retval","tok","add_escapes","message","addEscapes","str","ch","charAt","substring","RJsonToken","ofkind","nimage","_kind","_image","_next","specialToken","newNext","_beginLine","_endLine","_beginColumn","_endColumn","newKind","RJsonTokenMgrError","lexState","errorLine","errorColumn","errorAfter","reason","LexicalError"],"mappings":"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","file":"app.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"RJsonParser\"] = factory();\n\telse\n\t\troot[\"RJsonParser\"] = factory();\n})(this, function() {\nreturn ","import RJsonParser from \"./parser/RJsonParser\"\r\n\r\nimport css from \"./css/style.css\";\r\n\r\nvar example = { \"store\": { \"book\": [{ \"category\": \"reference\", \"author\": \"Nigel Rees\", \"title\": \"Sayings of the Century\", \"price\": 8.95 }, { \"category\": \"fiction\", \"author\": \"Evelyn Waugh\", \"title\": \"Sword of Honour\", \"price\": 12.99 }, { \"category\": \"fiction\", \"author\": \"J. R. R. Tolkien\", \"title\": \"The Lord of the Rings\", \"isbn\": \"0-395-19395-8\", \"price\": 22.99 }], \"bicycle\": { \"color\": \"red\", \"price\": 19.95 } } };\r\n\r\nformat();\r\nvar editor;\r\n\r\nfunction formatInputString(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToString(appendable, -1);\r\n    //console.log(appendable.destination);\r\n    editor.setValue(appendable.destination);\r\n    //document.getElementById('inputtextarea').value = appendable.destination;\r\n}\r\n\r\nfunction formatHtml(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.formatJsonToHtml(appendable, -1);\r\n    //console.log(appendable.destination);\r\n    document.getElementById('json').innerHTML = appendable.destination;\r\n}\r\n\r\nfunction initCm() {\r\n    var editorEl = document.getElementById(\"inputtextarea\");\r\n    editor = CodeMirror.fromTextArea(editorEl, {\r\n        lineNumbers: true,\r\n        lineWrapping: true,\r\n        mode: \"text/typescript\",\r\n        matchBrackets: true\r\n    });\r\n   \r\n    editor.setValue('loading...');\r\n    editor.setSize(600, 500);\r\n   \r\n}\r\n\r\nfunction compress(jsonObj) {\r\n    var appendable = {\r\n        destination: \"\"\r\n    }\r\n    jsonObj.toUnformattedString(appendable, -1);\r\n    //console.log(appendable.destination);\r\n    document.getElementById('json').innerHTML = appendable.destination;\r\n}\r\n\r\nfunction init() {\r\n    try {\r\n        //console.log('reformatting.');\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n        document.getElementById(\"error-display\").classList.toggle(\"hidden\");\r\n\r\n        //var target = document.getElementById('inputtextarea');\r\n        //console.log('parsing ' + editor.getValue());\r\n        let instance = new RJsonParser(editor.getValue());\r\n        //target.value = 'loading';\r\n        //console.log('parsing json...');\r\n        var jsonObj = instance.parse();\r\n        //console.log('parsing json done...');\r\n        formatInputString(jsonObj);\r\n        formatHtml(jsonObj);\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n        //console.log('adding eventlistener to compressjson');\r\n        document.getElementById('compressjson').addEventListener('click', () => {\r\n            compress(jsonObj);\r\n        });\r\n    } catch (e) {\r\n        //console.log('exception');\r\n        console.log(e.stack);\r\n        document.getElementById(\"error-display\").classList.toggle(\"hidden\");\r\n        document.getElementById('error-display').innerHTML = 'error loading json...';\r\n        document.getElementById(\"input-spinner\").classList.toggle(\"hidden\");\r\n    }\r\n}\r\n\r\n// function onTextEditorChange(cm, evt) {\r\n//     console.log('onTextEditorChange(cm, evt)');\r\n//     init();\r\n// }\r\n\r\nfunction format() {\r\n    try {\r\n        //var target = document.getElementById('inputtextarea');\r\n        //target.value = JSON.stringify(example);\r\n        initCm();\r\n        editor.setValue(JSON.stringify(example));\r\n        init();\r\n        // editor.on(\"change\", (cm, evt) => {\r\n        //     console.log('editor changed ...');\r\n        //     onTextEditorChange(cm, evt)\r\n        // });\r\n        document.getElementById('loadjson').addEventListener('click', () => {\r\n            //console.log('load json...' + document.getElementById('inputtextarea').value);\r\n            //alert('-----------' + document.getElementById('inputtextarea').innerHTML);\r\n            init();\r\n        })\r\n        \r\n    } catch (e) {\r\n        console.log(e.stack);\r\n        //document.getElementById('inputtextarea').innerHTML = e.message;\r\n    }\r\n}\r\n\r\n\r\n","import IOString from './IOString.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class CharStream {\r\n    maxBufSize = 4096;\r\n\r\n    constructor(stream) {\r\n        this.maxNextCharInd = 0;\r\n        this.nextCharInd = -1;\r\n\r\n        this.bufline = [];\r\n        this.bufcolumn = [];\r\n        this.column = 0;\r\n        this.line = 1;\r\n\r\n        this.bufpos = -1;\r\n        this.bufsize = 0;\r\n        this.available = this.maxBufSize;\r\n        this.inBuf = 0;\r\n\r\n        this.prevCharIsCR = false;\r\n        this.prevCharIsLF = false;\r\n        this.tabSize = 4;\r\n\r\n        this.tokenBegin = 0;\r\n        this.nextCharBuf = new Array(this.maxBufSize);\r\n        this.buffer = [];\r\n        this.inputStream = stream;\r\n    }\r\n\r\n    beginToken() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        this.tokenBegin = 0;\r\n        this.bufpos = -1;\r\n        return this.readChar();\r\n    }\r\n\r\n    readChar() {\r\n        if (this.inBuf > 0) {\r\n            // lookahead and backup has happened.\r\n            return this.readFromBuffer();\r\n        }\r\n        if (++this.bufpos === this.available)\r\n            this.adjustBuffSize();\r\n\r\n        let c;\r\n        if ((this.buffer[this.bufpos] = c = this.readByte()) == '\\\\') {\r\n            return this.checkSpecial(c);\r\n        } else {\r\n            this.updateLineColumn(c);\r\n            return c;\r\n        }\r\n    }\r\n\r\n    readByte() {\r\n\r\n        if (++this.nextCharInd >= this.maxNextCharInd)\r\n            this.fillBuff();\r\n        logger.debug(\"nextCharInd=\" + (this.nextCharInd) + \",this.maxNextCharInd=\" + this.maxNextCharInd + \",code=\" + this.nextCharBuf[this.nextCharInd].charCodeAt());\r\n        return this.nextCharBuf[this.nextCharInd];\r\n    }\r\n\r\n    fillBuff() {\r\n        let i;\r\n        if (this.maxNextCharInd === this.maxBufSize)\r\n            this.maxNextCharInd = this.nextCharInd = 0;\r\n        try {\r\n            if ((i = this.inputStream.read(this.nextCharBuf, this.maxNextCharInd, this.maxBufSize - this.maxNextCharInd)) === -1) {\r\n                this.inputStream.close();\r\n                throw new Error(\"stream has not enough data.\");\r\n            } else {\r\n                this.maxNextCharInd += i;\r\n            }\r\n        } catch (e) {\r\n            if (this.bufpos != 0) {\r\n                --this.bufpos;\r\n                this.backup(0);\r\n            } else {\r\n                this.bufline[this.bufpos] = this.line;\r\n                this.bufcolumn[this.bufpos] = this.olumn;\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    backup(amount) {\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n        this.inBuf += amount;\r\n        if ((this.bufpos -= amount) < 0)\r\n            this.bufpos += this.bufsize;\r\n        //this.tokenBegin = amount;\r\n        //logger.debug('inBuf-' + this.inBuf + \",bufPos-\" + this.bufpos);\r\n    }\r\n\r\n    readFromBuffer() {\r\n        //logger.debug('reading from inBuf-' + this.inBuf);\r\n        --this.inBuf;\r\n        if (++this.bufpos == this.bufsize)\r\n            this.bufpos = 0;\r\n        return this.buffer[this.bufpos];\r\n    }\r\n\r\n    adjustBuffSize() {\r\n        if (this.available === this.bufsize) {\r\n            if (this.tokenBegin > 2048) {\r\n                this.bufpos = 0;\r\n            } else {\r\n                this.expandBuff(true);\r\n            }\r\n        } else if (this.available > this.tokenBegin) {\r\n            this.available = this.bufsize;\r\n        } else if ((this.tokenBegin - this.available) < 2048) {\r\n            this.expandBuff(true);\r\n        } else {\r\n            this.available = this.tokenBegin;\r\n        }\r\n    }\r\n\r\n    expandBuff() {\r\n        throw new Error(\"Implementation to be done....\");\r\n    }\r\n\r\n    checkSpecial(c) {\r\n        //throw new Error(\"Implementation to be done....\");\r\n        return c;\r\n    }\r\n\r\n    updateLineColumn(c) {\r\n        this.column++;\r\n        if (this.prevCharIsLF) {\r\n            this.prevCharIsLF = false;\r\n            this.line += (this.column = 1);\r\n        } else if (this.prevCharIsCR) {\r\n            this.prevCharIsCR = false;\r\n            if (c == '\\n') {\r\n                this.prevCharIsLF = true;\r\n            } else {\r\n                this.line += (this.column = 1);\r\n            }\r\n        }\r\n\r\n        switch (c) {\r\n            case '\\r':\r\n                //this.tokenBegin++;\r\n                this.prevCharIsCR = true;\r\n                break;\r\n            case '\\n':\r\n                //this.tokenBegin++;\r\n                this.prevCharIsLF = true;\r\n                break;\r\n            case '\\t':\r\n                //this.tokenBegin++;\r\n                this.column--;\r\n                this.column += (this.tabSize - (this.column % this.tabSize));\r\n                break;\r\n            case 32:\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        this.bufline[this.bufpos] = this.line;\r\n        this.bufcolumn[this.bufpos] = this.column;\r\n    }\r\n\r\n    spaceDetected() {\r\n        this.tokenBegin++;\r\n    }\r\n\r\n    getImage() {\r\n        var response;\r\n        logger.debug(\"bufpos=\" + this.bufpos + \",tokenBegin=\" + this.tokenBegin);\r\n        //logger.debug(\"buffer=\" + this.buffer[0].charCodeAt() + \",\" + this.buffer[1].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[2].charCodeAt() + \",\" + this.buffer[3].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[4].charCodeAt() + \",\" + this.buffer[5].charCodeAt() );\r\n        //logger.debug(\"buffer=\" + this.buffer[6].charCodeAt() + \",\" + this.buffer[7].charCodeAt() );\r\n        if (this.bufpos >= this.tokenBegin) {\r\n            response = new IOString(this.buffer, this.tokenBegin, this.bufpos - this.tokenBegin + 1);\r\n            logger.debug(\"response=\" + response.toString());\r\n        } else {\r\n            response = new IOString(this.buffer, this.tokenBegin, this.bufsize - this.tokenBegin).toString() + new IOString(this.buffer, 0, this.bufpos + 1).toString();\r\n            logger.debug(\"response=\" + response.toString());\r\n        }\r\n        return response.stringify();\r\n    }\r\n\r\n    get getColumn() {\r\n        return this.bufcolumn[this.bufpos];\r\n    }\r\n\r\n    get getLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getEndLine() {\r\n        return this.bufline[this.bufpos];\r\n    }\r\n\r\n    get getBeginColumn() {\r\n        return this.bufcolumn[this.tokenBegin];\r\n    }\r\n\r\n    get getBeginLine() {\r\n        return this.bufline[this.tokenBegin];\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class IOString {\r\n\r\n    constructor(chars, offset, count) {\r\n        if (offset < 0)\r\n            throw new Error('Offset cannot be negative');\r\n        if (count < 0)\r\n            throw new Error('count cannot be negative');\r\n\r\n        let i;\r\n        let j= offset;\r\n        this.value = [];\r\n        var ccode = chars[j].charCodeAt();\r\n        // fix for removing white space in the begining of the string.\r\n        while(ccode === 32) {\r\n            j++;\r\n            ccode = chars[j].charCodeAt();\r\n        }\r\n        \r\n        for (i = j; i < (offset + count); i++) {\r\n            var code = chars[i].charCodeAt();\r\n            logger.debug('code at i=' + i +\",code=\" + code);\r\n            //this.value.push(chars[i]);\r\n            if (code != 34) // '\\\"'\r\n                this.value[i] = chars[i];\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toString() {\r\n        return this.value.join(\"\");\r\n    }\r\n\r\n    stringify() {\r\n        return this.value.join(\"\");\r\n    }\r\n}\r\n","export default class Reader {\r\n\r\n    constructor(newInput) {\r\n        if (this.constructor === Reader) {\r\n            throw new TypeError(\"Can not construct abstract class.\");\r\n        }\r\n\r\n        if (this.read === Reader.prototype.read) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method read.\");\r\n        }\r\n\r\n        if (this.getChars === Reader.prototype.getChars) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method getChars.\");\r\n        }\r\n\r\n        if (this.close === Reader.prototype.close) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract close getChars.\");\r\n        }\r\n        \r\n        this.input = newInput;\r\n        this.length = this.input.length;\r\n        this.next = 0;\r\n        this.mark = 0;\r\n    }\r\n\r\n    read(cbuf, offset, len) {\r\n        throw new TypeError(\"Do not call abstract method read from child.\");\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        throw new TypeError(\"Do not call abstract method getChars from child.\");\r\n    }\r\n\r\n    close() {\r\n        throw new TypeError(\"Do not call abstract method close from child.\");\r\n    }\r\n\r\n    ensureOpen() {\r\n        if (this.input === null)\r\n            throw new Error('Stream closed');\r\n    }\r\n}","import Reader from './Reader.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class StringReader extends Reader {\r\n\r\n    constructor(newInput) {\r\n        super(newInput);\r\n    }\r\n    /*\r\n     * Reads characters into a portion of an array. This method will block until some input is \r\n     * available, an I/O error occurs, or the end of the stream is reached.\r\n     * \r\n     * return The number of characters read, or -1 if the end of the stream has been reached\r\n     */\r\n    read(cbuf, offset, len) {\r\n        this.ensureOpen();\r\n        if ((offset < 0) || (offset > cbuf.length) || (len < 0) ||\r\n            ((offset + len) > cbuf.length) || ((offset + len) < 0)) {\r\n            throw new Error('index out of bounds.');\r\n        } else if (len == 0) {\r\n            return 0;\r\n        }\r\n        if (this.next >= this.length)\r\n            return -1;\r\n        var n = Math.min(this.length - this.next, len);\r\n        this.getChars(this.next, this.next + n, cbuf, offset);\r\n        this.next += n;\r\n        return n;\r\n    }\r\n\r\n    getChars(srcBegin, srcEnd, dst, dstBegin) {\r\n        if (srcBegin < 0) {\r\n            new Error('index out of bounds - ' + srcBegin);\r\n        }\r\n        if (srcEnd > this.input.length) {\r\n            new Error('index out of bounds - ' + srcEnd);\r\n        }   \r\n        if (srcBegin > srcEnd) {\r\n            throw new Error('index out of bounds - ' + (srcEnd - srcBegin));\r\n        }\r\n        var i;\r\n        for(i = srcBegin; i <= srcEnd; i++) {\r\n            dst[dstBegin] = this.input[i];\r\n            dstBegin++;\r\n        }\r\n    }\r\n\r\n    close() {\r\n        this.input = null;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    toUnformattedString(appendable, currentLevel) {\r\n        if(this._input)\r\n            appendable.destination = true;\r\n        else \r\n            appendable.destination = false;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        if(this._input)\r\n            appendable.destination = true;\r\n        else \r\n            appendable.destination = false;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-boolean\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonList extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    add(jsonObject) {\r\n        this._input.push(jsonObject);\r\n        return this;\r\n    }\r\n    \r\n    toUnformattedString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let j;\r\n        let destination = \"\";\r\n        destination += \"[\";\r\n        j = 0;\r\n        let size = this._input.length;\r\n        this._input.forEach(element => {\r\n            var cAppendable = {\r\n                destination: \"\"\r\n            }\r\n            element.formatJsonToString(cAppendable, currentLevel);\r\n            destination += cAppendable.destination;\r\n            if (j != (size - 1))\r\n                destination += \",\";\r\n            j++;\r\n        });\r\n        destination += \"]\";\r\n        appendable.destination += destination;\r\n    }\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i, j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\\n\" + tabs + \"[\\n\";\r\n        j = 0;\r\n        let size = this._input.length;\r\n        this._input.forEach(element => {\r\n            var cAppendable = {\r\n                destination: \"\"\r\n            }\r\n            element.formatJsonToString(cAppendable, currentLevel);\r\n            destination += cAppendable.destination;\r\n            if (j != (size - 1))\r\n                destination += \",\\n\";\r\n            j++;\r\n        });\r\n        destination += \"\\n\" + tabs + \"]\";\r\n        appendable.destination += destination;\r\n        //console.log('destination->' + destination);\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if (this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n\r\n        let size = this._input.length;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">[\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j = 0;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(element => {\r\n\r\n            destination += \"<li>\";\r\n            var cAppendable = {\r\n                destination: 0\r\n            }\r\n            element.formatJsonToHtml(cAppendable, currentLevel);\r\n            destination += cAppendable.destination;\r\n            if (j != (size - 1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;\r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">]</span>\";\r\n        if (this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonMap extends JsonObject {\r\n    \r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    put(jsonObjectKey,jsonObjectValue) {\r\n        this._input.set(jsonObjectKey, jsonObjectValue);\r\n        logger.debug('map size ->' + this._input.size);\r\n        return this;\r\n    }\r\n\r\n    toUnformattedString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let j;\r\n        let destination = \"\";\r\n        destination += \"{\";\r\n        j = 0;\r\n        let size = this._input.size;\r\n        logger.info('size of the map ' + this._input.size);\r\n\r\n        this._input.forEach(function(value, key) {\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            var valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n         \r\n            key.formatJsonToString(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \" : \";\r\n            \r\n            value.keyValue = true;\r\n            value.formatJsonToString(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\";\r\n            j++;  \r\n        });\r\n        destination += \"}\";\r\n        appendable.destination += destination;\r\n    }\r\n    \r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let tabs = '';\r\n        let i,j;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs += \"\\t\";\r\n        let destination = \"\";\r\n        destination += \"\" + tabs + \"{\\n\";\r\n        j = 0;\r\n        let size = this._input.size;\r\n        logger.info('size of the map ' + this._input.size);\r\n\r\n        this._input.forEach(function(value, key) {\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            var valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n         \r\n            key.formatJsonToString(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \" : \";\r\n            \r\n            value.keyValue = true;\r\n            value.formatJsonToString(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            if(j != (size-1))\r\n                destination += \",\\n\";\r\n            j++;  \r\n        });\r\n        destination += \"\\n\" + tabs + \"}\";\r\n        appendable.destination += destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        logger.debug('formatting to html...' + this._root);\r\n        if(this._root) {\r\n            destination += \"<div class=\\\"json-viewer\\\"><code class=\\\"js\\\" id=\\\"js\\\">\";\r\n        }\r\n        logger.debug('formatting to html...');\r\n        \r\n        let size = this._input.size;\r\n        destination += \"<a class=\\\"list-link\\\" href=\\\"javascript:void(0)\\\">{\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"far fa-minus-square\\\"></i></span>\";\r\n        destination += \"<span style=\\\"color: #1d57d4;\\\" class=\\\"hide\\\"><i onClick=\\\"spanClicked(event);\\\" class=\\\"fas fa-plus-square\\\"></i></span>\";\r\n        destination += \"<span class=\\\"hide\\\"><span onClick=\\\"spanClicked(event);\\\" class=\\\"items-ph\\\">\" + size + \" items</span></span>\";\r\n        destination += \"</a>\";\r\n        let j = 0;\r\n        destination += \"<ul data-level=\\\"\" + ++currentLevel + \"\\\" class=\\\"type-array\\\">\";\r\n        this._input.forEach(function(value, key) {\r\n            destination += \"<li>\";\r\n            var keyAppendable = {\r\n                destination : \"\"\r\n            }\r\n            key.formatJsonToHtml(keyAppendable,currentLevel);\r\n            destination += keyAppendable.destination;\r\n            destination += \"<span class=\\\"type-colon\\\">:</span>\";\r\n\t\t\tvar valueAppendable = {\r\n                destination : \"\"\r\n            }\r\n            value.formatJsonToHtml(valueAppendable,currentLevel);\r\n            destination += valueAppendable.destination;\r\n            logger.debug(\"j value \" + j);\r\n            if(j != (size-1))\r\n                destination += \"<span class=\\\"type-comma\\\">\" + \",\" + \"</span>\";\r\n            destination += \"</li>\";\r\n            j++;  \r\n        });\r\n        destination += \"</ul>\";\r\n        destination += \"<span class=\\\"type-symbol\\\">}</span>\";\r\n        if(this._root) {\r\n            destination += \"</code></div>\";\r\n        }\r\n\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonBoolean extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    toUnformattedString(appendable, currentLevel) {\r\n        appendable.destination = null;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination = null;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-null\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","\r\nimport JsonObject from './JsonObject.js';\r\n\r\nexport default class JsonNumber extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n    }\r\n\r\n    toUnformattedString(appendable, currentLevel) {\r\n        appendable.destination += this._input;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        //console.log('destination->' + destination);\r\n        appendable.destination += this._input;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        destination += \"<span class=\\\"type-number\\\">\";\r\n        destination += this._input + \"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","export default class JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        // if (this.constructor === JsonObject) {\r\n        //     throw new TypeError(\"Can not construct abstract class.\");\r\n        // }\r\n\r\n        if (this.formatJsonToString === JsonObject.prototype.formatJsonToString) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToString.\");\r\n        }\r\n\r\n        if (this.formatJsonToHtml === JsonObject.prototype.formatJsonToHtml) {\r\n            // Error Type 4. Child has not implemented this abstract method.\r\n            throw new TypeError(\"Please implement abstract method formatJsonToHtml.\");\r\n        }\r\n        this._root = root;\r\n        this._isKey = isKey;\r\n        this._input = input;\r\n        this._keyValue = false;\r\n        this._rawInput = '';\r\n    }\r\n\r\n    get root() {\r\n        return this._root;\r\n    }\r\n\r\n    set root(newRoot) {\r\n        this._root = newRoot;\r\n    }\r\n\r\n    get isKey() {\r\n        return this._isKey;\r\n    }\r\n\r\n    set isKey(newKey) {\r\n        this._isKey = newKey;\r\n    }\r\n\r\n    get input() {\r\n        return this._input;\r\n    }\r\n\r\n    set input(newInput) {\r\n        this._input = newInput;\r\n    }\r\n\r\n    get rawInput() {\r\n        return this._rawInput;\r\n    }\r\n\r\n    set rawInput(raw) {\r\n        this._rawInput = raw;\r\n    }\r\n\r\n    set keyValue(newValue) {\r\n        this._keyValue = newValue;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toString from child.\");\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        throw new TypeError(\"Do not call abstract method toHtml from child.\");\r\n    }\r\n}","import JsonObject from './JsonObject.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class JsonString extends JsonObject {\r\n\r\n    constructor(root, isKey, input) {\r\n        super(root, isKey, input);\r\n        this.removeSpecialChars();\r\n    }\r\n\r\n    removeSpecialChars() {\r\n        var tmp = this._input;\r\n        var i = 0;\r\n        var r = [];\r\n        for(i=0;i<tmp.length;i++) {\r\n            if(tmp[i] != '\\r' && tmp[i] != '\\t' && tmp[i] != '\\n') {\r\n                r.push(tmp[i]);\r\n            }\r\n        }\r\n\r\n        this._input = r.join(\"\");\r\n    }\r\n\r\n    toUnformattedString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let destination = \"\";\r\n        let i;\r\n        logger.debug('appendable->' + appendable);\r\n        if (this._isKey) {\r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else if (this._keyValue) {    \r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else {\r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        }\r\n        logger.debug('destination->' + destination);\r\n        appendable.destination = destination;\r\n    }\r\n\r\n    formatJsonToString(appendable, currentLevel) {\r\n        ++currentLevel;\r\n        let destination = \"\";\r\n        let tabs = '';\r\n        let i;\r\n        for (i = 0; i < currentLevel; i++)\r\n            tabs = tabs.concat(\"\\t\");\r\n        logger.debug('appendable->' + appendable);\r\n        if (this._isKey) {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        } else if (this._keyValue) {    \r\n            destination += \"\\\"\" + this._input + \"\\\"\";\r\n        } else {\r\n            destination += tabs + \"\\\"\" + this._input + \"\\\"\";\r\n        }\r\n        logger.debug('destination->' + destination);\r\n        appendable.destination = destination;\r\n    }\r\n\r\n    formatJsonToHtml(appendable, currentLevel) {\r\n        let destination = \"\";\r\n        if (this._isKey) {\r\n            destination += \"<span class=\\\"type-key\\\">\\\"\";\r\n        } else {\r\n            destination += \"<span class=\\\"type-string\\\">\\\"\";\r\n        }\r\n        destination += this._input + \"\\\"</span>\";\r\n        appendable.destination = destination;\r\n    }\r\n}","module.exports.debug = (msg) => {\r\n    //console.log(msg);\r\n}\r\nmodule.exports.info = (msg) => {\r\n   //console.log(msg);\r\n}\r\n\r\n// var appRoot = require('app-root-path');\r\n// var winston = require('winston');\r\n\r\n// const logFormat = winston.format.combine(\r\n// \t\t winston.format.colorize(),\r\n// \t\t winston.format.timestamp(),\r\n// \t\t winston.format.align(),\r\n// \t\t winston.format.printf(\r\n// \t\t  info => `${info.timestamp} ${info.level}: ${info.message}`,\r\n// \t\t),);\r\n\r\n// // define the custom settings for each transport (file, console)\r\n// var options = {\r\n//   console: {\r\n//     level: 'debug',\r\n//     handleExceptions: true,\r\n//     json: false,\r\n//     colorize: true\r\n//   }\r\n// };\r\n\r\n// // instantiate a new Winston Logger with the settings defined above\r\n// let logger = winston.createLogger({\r\n// \t  format: logFormat,\r\n// \t  transports: [\r\n// \t    new (winston.transports.Console)(options.console)\r\n// \t  ],\r\n// \t  exitOnError: false, // do not exit on handled exceptions\r\n// \t});\r\n\r\n// // create a stream object with a 'write' function that will be used by `morgan`\r\n// logger.stream = {\r\n//   write: function(message, encoding) {\r\n//     // use the 'info' log level so the output will be picked up by both transports (file and console)\r\n//     logger.info(message);\r\n//   },\r\n// };\r\n\r\n// module.exports = logger;","import JsonString from \"../json/JsonString\";\r\nimport JsonBoolean from \"../json/JsonBoolean\";\r\nimport JsonNumber from \"../json/JsonNumber\";\r\nimport JsonNull from \"../json/JsonNull\";\r\nimport RJsonConstants from \"./RJsonConstants\";\r\nimport StringReader from \"../io/StringReader\";\r\nimport CharStream from \"../io/CharStream\";\r\nimport RJsonLexer from \"./RJsonLexer\";\r\nimport RJsonToken from \"./RJsonToken\";\r\n\r\nexport default class RJsonAbsParser extends RJsonConstants {\r\n\r\n    constructor(rinput,startNow) {\r\n        super();\r\n        \r\n        if(startNow === undefined) {\r\n            this.init(rinput);\r\n        }\r\n    }\r\n\r\n    init(rinput) {\r\n        this.input = rinput;\r\n        this.reader = new StringReader(this.input);\r\n        this.stream = new CharStream(this.reader);\r\n        this.lexer = new RJsonLexer(this.stream);\r\n        this.token = new RJsonToken();\r\n        this.token.next = this.jj_nt = this.lexer.getNextToken();\r\n        this.jj_gen = 0;\r\n        this.jj_la1 = new Array(13);\r\n        this.jj_la1_0 = [0xccf8480, 0x78000, 0x1ccf8000, 0x40, 0x1ccf8000, 0x40, 0xccf8480, 0xccf8000, 0x60000, 0x18000, 0xcc00000, 0x8800000, 0x4400000,];;\r\n        var i;\r\n        for (i = 0; i < 13; i++)\r\n            this.jj_la1[i] = -1;\r\n\r\n        this.jj_kind = -1;\r\n        this.nativeNumbers = false;\r\n    }\r\n\r\n    getNextToken() {\r\n        if ((this.token = this.jj_nt).next != null) this.jj_nt = this.jj_nt.next;\r\n        else this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n        this.jj_gen++;\r\n        return this.token;\r\n    }\r\n\r\n    objectKey() {\r\n        let o, key;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                key = this.string();\r\n                break;\r\n            case this.SYMBOL:\r\n                key = this.symbol();\r\n                break;\r\n            case this.NULL:\r\n                this.nullValue();\r\n                key = null;\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                switch (this.jj_nt.kind) {\r\n                    case this.TRUE:\r\n                    case this.FALSE:\r\n                        o = this.booleanValue();\r\n                        break;\r\n                    case this.NUMBER_INTEGER:\r\n                    case this.NUMBER_DECIMAL:\r\n                        o = this.number();\r\n                        break;\r\n                    default:\r\n                        this.jj_la1[1] = this.jj_gen;\r\n                        this.jj_consume_token(-1);\r\n                        throw new Error();\r\n                }\r\n                key = o;\r\n                break;\r\n            case this.BRACE_CLOSE:\r\n                break;\r\n            default:\r\n                this.jj_la1[2] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) { if(key) key.key = true; return key; } }\r\n    }\r\n\r\n    string() {\r\n        let s;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                s = this.doubleQuoteString();\r\n                break;\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                s = this.singleQuoteString();\r\n                break;\r\n            default:\r\n                this.jj_la1[10] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return s; }\r\n    }\r\n\r\n    doubleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_DOUBLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_DOUBLE_NONEMPTY);\r\n                var image = this.token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[11] = this.sjj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    singleQuoteString() {\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_EMPTY);\r\n                { if (true) return new JsonString(false, false, \"\"); }\r\n                break;\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n                this.jj_consume_token(this.STRING_SINGLE_NONEMPTY);\r\n                var image = token.image;\r\n                { if (true) return new JsonString(false, false, image); }\r\n                break;\r\n            default:\r\n                this.jj_la1[12] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n\r\n    symbol() {\r\n        this.jj_consume_token(this.SYMBOL);\r\n        { if (true) return new JsonString(false, false, token.image); }\r\n    }\r\n\r\n    nullValue() {\r\n        this.jj_consume_token(this.NULL);\r\n        { if (true) return new JsonNull(); }\r\n    }\r\n\r\n    booleanValue() {\r\n        var b;\r\n        switch (this.jj_nt.kind) {\r\n            case this.TRUE:\r\n                this.jj_consume_token(this.TRUE);\r\n                b = true;\r\n                break;\r\n            case this.FALSE:\r\n                this.jj_consume_token(this.FALSE);\r\n                b = false;\r\n                break;\r\n            default:\r\n                this.jj_la1[8] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return new JsonBoolean(b); }\r\n    }\r\n\r\n    value() {\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.string();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n                x = this.number();\r\n                break;\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n                x = this.booleanValue();\r\n                break;\r\n            case this.NULL:\r\n                x = this.nullValue();\r\n                break;\r\n            default:\r\n                this.jj_la1[7] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    number() {\r\n        let t;\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_DECIMAL:\r\n                t = this.jj_consume_token(this.NUMBER_DECIMAL);\r\n                if (nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n                t = this.jj_consume_token(this.NUMBER_INTEGER);\r\n                if (this.nativeNumbers) {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                } else {\r\n                    { if (true) return new JsonNumber(false, false, t.image); }\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[9] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new Error();\r\n        }\r\n    }\r\n}","export default class RJsonConstants {\r\n\r\n    constructor() {\r\n        /** End of File. */\r\n        this.EOF = 0;\r\n        /** RegularExpression Id. */\r\n        this.C_SINGLE_COMMENT = 1;\r\n        /** RegularExpression Id. */\r\n        this.C_MULTILINE_COMMENT = 2;\r\n        /** RegularExpression Id. */\r\n        this.SH_SINGLE_COMMENT = 3;\r\n        /** RegularExpression Id. */\r\n        this.WHITESPACE = 4;\r\n        /** RegularExpression Id. */\r\n        this.EOL = 5;\r\n        /** RegularExpression Id. */\r\n        this.COMMA = 6;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_OPEN = 7;\r\n        /** RegularExpression Id. */\r\n        this.BRACE_CLOSE = 8;\r\n        /** RegularExpression Id. */\r\n        this.COLON = 9;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_OPEN = 10;\r\n        /** RegularExpression Id. */\r\n        this.BRACKET_CLOSE = 11;\r\n        /** RegularExpression Id. */\r\n        this.ZERO = 12;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT_NONZERO = 13;\r\n        /** RegularExpression Id. */\r\n        this.DIGIT = 14;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_INTEGER = 15;\r\n        /** RegularExpression Id. */\r\n        this.NUMBER_DECIMAL = 16;\r\n        /** RegularExpression Id. */\r\n        this.TRUE = 17;\r\n        /** RegularExpression Id. */\r\n        this.FALSE = 18;\r\n        /** RegularExpression Id. */\r\n        this.NULL = 19;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_DOUBLE = 20;\r\n        /** RegularExpression Id. */\r\n        this.QUOTE_SINGLE = 21;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_EMPTY = 22;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_EMPTY = 23;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_BODY = 24;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_BODY = 25;\r\n        /** RegularExpression Id. */\r\n        this.STRING_SINGLE_NONEMPTY = 26;\r\n        /** RegularExpression Id. */\r\n        this.STRING_DOUBLE_NONEMPTY = 27;\r\n        /** RegularExpression Id. */\r\n        this.SYMBOL = 28;\r\n\r\n        /** Lexical state. */\r\n        this.DEFAULT = 0;\r\n\r\n        this.LEXICAL_ERROR = 0;\r\n\r\n        /** Literal token values. */\r\n        this.tokenImage = [\r\n            \"<EOF>\",\r\n            \"<C_SINGLE_COMMENT>\",\r\n            \"<C_MULTILINE_COMMENT>\",\r\n            \"<SH_SINGLE_COMMENT>\",\r\n            \"<WHITESPACE>\",\r\n            \"<EOL>\",\r\n            \"\\\",\\\"\",\r\n            \"\\\"{\\\"\",\r\n            \"\\\"}\\\"\",\r\n            \"\\\":\\\"\",\r\n            \"\\\"[\\\"\",\r\n            \"\\\"]\\\"\",\r\n            \"\\\"0\\\"\",\r\n            \"<DIGIT_NONZERO>\",\r\n            \"<DIGIT>\",\r\n            \"<NUMBER_INTEGER>\",\r\n            \"<NUMBER_DECIMAL>\",\r\n            \"\\\"true\\\"\",\r\n            \"\\\"false\\\"\",\r\n            \"\\\"null\\\"\",\r\n            \"\\\"\\\\\\\"\\\"\",\r\n            \"\\\"\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\'\\\\\\'\\\"\",\r\n            \"\\\"\\\\\\\"\\\\\\\"\\\"\",\r\n            \"<STRING_SINGLE_BODY>\",\r\n            \"<STRING_DOUBLE_BODY>\",\r\n            \"<STRING_SINGLE_NONEMPTY>\",\r\n            \"<STRING_DOUBLE_NONEMPTY>\",\r\n            \"<SYMBOL>\",\r\n        ];\r\n    }\r\n}","import RJsonToken from './RJsonToken.js';\r\nimport RJsonTokenMgrError from './RJsonTokenMgrError.js';\r\nimport RJsonConstants from './RJsonConstants.js';\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonLexer extends RJsonConstants {\r\n\r\n    constructor(istream) {\r\n        super();\r\n        this.input_stream = istream;\r\n        this.curChar = '';\r\n        this.matchedKind = 0;\r\n        this.matchedPos = 0;\r\n        this.toToken = [0x1ccf8fc1,];\r\n        this.curLexState = 0;\r\n        // this.strLiteralImages = [\r\n        //     \"\", null, null, null, null, 'null', '0o54', 0o173, 0o175, 0o072, 0o133, \r\n        //     0o135, null, null, null, null, null, null, null, null, null, null, \"\\'\", \r\n        //     \"\\\"\", null, null, null, null, null, ];\r\n        this.strLiteralImages = [\r\n            \"\", null, null, null, null, 'null', ',', '{', '}', ':', '[',\r\n            ']', null, null, null, null, null, null, null, null, null, null, \"\\'\",\r\n            \"\\\"\", null, null, null, null, null,];\r\n    }\r\n\r\n    getNextToken() {\r\n        logger.debug(\"getNextToken()\");\r\n        var matchedToken = null;\r\n        var curPos = 0;\r\n        EOFLoop:\r\n        for (; ;) {\r\n            try {\r\n                this.curChar = this.input_stream.beginToken();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                this.matchedKind = 0;\r\n                matchedToken = this.fillToken();\r\n                return matchedToken;\r\n            }\r\n            logger.debug(\"this.curChar =\" + this.curChar);\r\n            this.matchedKind = 0x7fffffff;\r\n            this.matchedPos = 0;\r\n            curPos = this.analyzeCurrentCharacter();\r\n            logger.debug(\"matchedKind()->\" + this.matchedKind + \",curPos->\" + curPos);\r\n            if (this.matchedKind != 0x7fffffff) {\r\n               \r\n                if (this.matchedPos + 1 < curPos) {\r\n                    this.input_stream.backup(curPos - this.matchedPos - 1); // possible backtracking.\r\n                }\r\n                logger.debug(\"curPos=\" + curPos);\r\n                if ((this.matchedKind == this.C_SINGLE_COMMENT)\r\n                    || (this.matchedKind == this.C_MULTILINE_COMMENT) ) {\r\n                        logger.debug(\"this.matchedKind=\" + this.matchedKind);\r\n                    this.matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched\" + this.matchedKind);\r\n                    return matchedToken;\r\n                }\r\n                if (this.matchedKind == this.BRACE_OPEN || this.matchedKind == this.TRUE\r\n                    || this.matchedKind == this.NUMBER_INTEGER\r\n                    || this.matchedKind == this.NULL\r\n                    || this.matchedKind == this.COMMA \r\n                    || this.matchedKind == this.STRING_DOUBLE_EMPTY\r\n                    || this.matchedKind == this.STRING_DOUBLE_EMPTY) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched->\" + matchedToken);\r\n                    return matchedToken;\r\n                }\r\n                if ((this.toToken[this.matchedKind >> 6] & (1 << (this.matchedKind & 77))) != 0) {\r\n                    matchedToken = this.fillToken();\r\n                    logger.debug(\"getNextToken()::Matched >> 6->\" + this.matchedKind);\r\n                    return matchedToken;\r\n                } else {\r\n                    continue EOFLoop;\r\n                }\r\n            }\r\n            // error begins.....\r\n            let error_line = this.input_stream.getEndLine;\r\n            let error_column = this.input_stream.getEndColumn;\r\n            let error_after = null;\r\n            let EOFSeen = false;\r\n            try {\r\n                this.input_stream.readChar();\r\n                this.input_stream.backup(1);\r\n            } catch (e1) {\r\n                logger.debug(e1.stack);\r\n                EOFSeen = true;\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n                if (this.curChar == '\\n' || this.curChar == '\\r') {\r\n                    error_line++;\r\n                    error_column = 0;\r\n                } else {\r\n                    error_column++;\r\n                }\r\n            }\r\n            logger.debug('xxxxxxxxxxxx');\r\n            if (!EOFSeen) {\r\n                logger.debug('xxxxxxxxxxxx');\r\n                this.input_stream.backup(1);\r\n                error_after = curPos <= 1 ? \"\" : this.input_stream.getImage();\r\n            }\r\n            logger.debug('zzzzzzzzzzzzzzzz');\r\n            throw new RJsonTokenMgrError(EOFSeen, this.curLexState, error_line, error_column, error_after, this.curChar, this.LEXICAL_ERROR);\r\n        }\r\n    }\r\n\r\n    analyzeCurrentCharacter() {\r\n        if (this.curChar == ' ' || this.curChar == '\\t' || this.curChar == '\\n' || this.curChar == '\\r') {\r\n            this.consume_char();\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                // hack for special characters after the last token.\r\n                this.matchedKind = 0;\r\n                return 1;\r\n            }\r\n            return this.analyzeCurrentCharacter();\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug('analyzeCurrentCharacter()->' + code);\r\n        switch (code) {\r\n            case 123: // '{'\r\n                return this.stopAtPos(0, this.BRACE_OPEN);\r\n            case 125: // '}'\r\n                return this.stopAtPos(0, this.BRACE_CLOSE);\r\n            case 34: // '\"'\r\n                logger.debug('case 34()->' + code);\r\n                return this.moveChar01(8);\r\n            case 39: // '\\''\r\n                return this.moveChar01(4);\r\n            case 44: // ','\r\n                return this.stopAtPos(0, this.COMMA);\r\n            case 58: // ':'\r\n                return this.stopAtPos(0, this.COLON);\r\n            case 91: // '['\r\n                return this.stopAtPos(0, this.BRACKET_OPEN);\r\n            case 93: // ']'\r\n                return this.stopAtPos(0, this.BRACKET_CLOSE);\r\n            case 70: // 'F'\r\n            case 102: // 'f'\r\n                return this.moveChar01(4);\r\n            case 78: // 'N'\r\n            case 110: // 'n'\r\n                return this.moveChar01(8);\r\n            case 84: // 'T'\r\n            case 116: // 't'\r\n                return this.moveChar01(2);\r\n            case 47: // '/'\r\n                return this.moveChar01(6);\r\n            case 35: // '#'\r\n                return this.moveChar(0, '\\n');\r\n            default:\r\n                return this.findNumber(0, 0);\r\n        }\r\n    }\r\n\r\n    isDigit() {\r\n        \r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"isDigit-\\\"\" + code + \"\\\"\");\r\n\r\n        if (code == 46) { // '.'\r\n            return true;\r\n        }\r\n\r\n        if (code > 47 && code < 58) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    findNumber(startState, curPos) {\r\n        logger.debug(\"findNumber=\\\"\" + this.curChar + \"\\\"\");\r\n        while (this.isDigit()) {\r\n            ++curPos;\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"\\\"\" + code + \"\\\"\");\r\n        if (code == 44 || code == 125\r\n            || this.curChar == '\\r' || this.curChar == '\\n' || this.curChar == ' '\r\n            || this.curChar == '\\t') {\r\n            --curPos;\r\n            logger.debug(\"\\\"\" + code + \"\\\"\");\r\n            this.matchedKind = this.NUMBER_INTEGER;\r\n            this.matchedPos = curPos;\r\n            this.input_stream.backup(1);\r\n            return curPos;\r\n        }\r\n        // not a valid numbers\r\n        return curPos;\r\n    }\r\n\r\n    findStringLiteral(curPos, active0) {\r\n        //logger.debug(\"finding string literal\");\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        for (; ;) {\r\n            let code = this.curChar.charCodeAt();\r\n            //logger.debug(\"findStringLiteral() = \" + code);\r\n            switch (code) {\r\n                case 34: // '\"'\r\n                    kind = this.STRING_DOUBLE_NONEMPTY;\r\n                    break;\r\n                case 92: // '\\escape char\r\n                    // check if the next char is '\"', then it is escape sequence. consume the next token.\r\n                    try {\r\n                        this.curChar = this.input_stream.readChar();\r\n                    } catch (e) {\r\n                        return 1;\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                //logger.debug(\"returning curPos = \" + curPos);\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                logger.debug(e.stack);\r\n                return curPos;\r\n            }\r\n        }\r\n    }\r\n\r\n    moveChar(curPos, target) {\r\n        logger.debug(\"moveChar::curChar=\" + this.curChar + \",target=\" + target);\r\n        var kind = 0x7fffffff;\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        for (; ;) {\r\n            if (this.curChar == '\\n' || this.curChar == '\\r' || this.curChar == '\\f') {\r\n                kind = this.C_SINGLE_COMMENT;\r\n            }\r\n            if (code == 42) { // '*'\r\n                \r\n                // lookahead for char '/'\r\n                try {\r\n                    this.curChar = this.input_stream.readChar();\r\n                } catch (e) {\r\n                    return 1;\r\n                }\r\n                let ccode = this.curChar.charCodeAt();\r\n                if (ccode == 47) {\r\n                    ++curPos;\r\n                    kind = this.C_MULTILINE_COMMENT;\r\n                } else {\r\n                    this.input_stream.backup(1);\r\n                }\r\n            }\r\n\r\n            ++curPos;\r\n            if (kind != 0x7fffffff) {\r\n                this.matchedKind = kind;\r\n                this.matchedPos = curPos;\r\n                return curPos;\r\n            }\r\n            try {\r\n                this.curChar = this.input_stream.readChar();\r\n            } catch (e) {\r\n                return curPos;\r\n            }\r\n            code = this.curChar.charCodeAt();\r\n        }\r\n    }\r\n\r\n    moveChar01(active0) {\r\n        try {\r\n            //logger.debug(\"@moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n            this.curChar = this.input_stream.readChar();\r\n            //logger.debug(\"@moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        } catch (e) {\r\n            logger.debug(e.stack);\r\n            return 1;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar01::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 34: // '\"'\r\n                if ((active0 & 8) != 0)\r\n                    return this.stopAtPos(1, this.STRING_DOUBLE_EMPTY);\r\n                break;\r\n            case 39: // '\\''\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(1, this.STRING_SINGLE_EMPTY);\r\n                break;\r\n            case 65: // 'A'\r\n            case 97: // 'a'\r\n                if ((active0 & 4) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 82: // 'R'\r\n            case 114: // 'r'\r\n                if ((active0 & 2) != 0)\r\n                    return this.moveChar02(active0, 4);\r\n                break;\r\n            case 85: // 'U'\r\n            case 117: // 'u'\r\n                if ((active0 & 8) != 0)\r\n                    return this.moveChar02(active0, 8);\r\n                break;\r\n            case 47: // '/' - C_SINGLE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '\\n');\r\n                break;\r\n            case 42: // '*' - C_MULTILINE_COMMENT\r\n                if ((active0 & 6) != 0)\r\n                    return this.moveChar(0, '*');\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        return this.findStringLiteral(0, active0);\r\n    }\r\n\r\n    moveChar02(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 2;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        //logger.debug(\"moveChar02::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 76: // L\r\n            case 108:// l\r\n                return this.moveChar03(active0, 5);\r\n            case 85:// U\r\n            case 117:// u\r\n                return this.moveChar03(active0, 2);\r\n            default:\r\n                break;\r\n        }\r\n        return this.findStringLiteral(1, active0);\r\n    }\r\n\r\n    moveChar03(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 3;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar03::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101: // e\r\n                if ((active0 & 2) != 0)\r\n                    return this.stopAtPos(3, this.TRUE);\r\n                break;\r\n            case 76: // L\r\n            case 108:// l\r\n                \r\n                if ((active0 & 5) != 0) {\r\n                    logger.debug('moveChar03->foundNull-' + (active0 & 5));\r\n                    return this.stopAtPos(3, this.NULL);\r\n                }\r\n                break;\r\n            case 83: // S\r\n            case 115:// s\r\n                return this.moveChar04(active0, 4);\r\n            default:\r\n                break;\r\n        }\r\n        return this.findStringLiteral(2, active0);\r\n    }\r\n\r\n    moveChar04(old0, active0) {\r\n        try {\r\n            this.curChar = this.input_stream.readChar();\r\n        } catch (e) {\r\n            return 4;\r\n        }\r\n        let code = this.curChar.charCodeAt();\r\n        logger.debug(\"moveChar04::curChar=\" + this.curChar + \",code=\" + code);\r\n        switch (code) {\r\n            case 69: // E\r\n            case 101:// e\r\n                if ((active0 & 4) != 0)\r\n                    return this.stopAtPos(4, this.FALSE);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    stopAtPos(pos, kind) {\r\n        this.matchedKind = kind;\r\n        this.matchedPos = pos;\r\n        return pos + 1;\r\n    }\r\n\r\n    checkForSpace() {\r\n        let code = this.curChar.charCodeAt();\r\n        if (code == 32) {\r\n            try {\r\n                curChar = input_stream.readChar();\r\n            } catch (e) {\r\n            }\r\n            let ccode = this.curChar.charCodeAt();\r\n            if (ccode != 32) {\r\n                input_stream.backup(1);\r\n                return;\r\n            } else {\r\n                this.checkForSpace();\r\n            }\r\n        }\r\n    }\r\n\r\n    fillToken() {\r\n        let beginLine = this.input_stream.getBeginLine;\r\n        let beginColumn = this.input_stream.getBeginColumn;\r\n        let endLine = this.input_stream.getEndLine;\r\n        let endColumn = this.input_stream.getEndColumn;\r\n        var im = this.strLiteralImages[this.matchedKind];\r\n        let tokenImage = (im == null) ? this.input_stream.getImage() : im;\r\n        //let tokenImage = this.input_stream.getImage();\r\n        let token = RJsonToken.newToken(this.matchedKind, tokenImage);\r\n        logger.debug('generated new token ->' + token.toString());\r\n        token.beginLine = beginLine;\r\n        token.endLine = endLine;\r\n        token.beginColumn = beginColumn;\r\n        token.endColumn = endColumn;\r\n        return token;\r\n    }\r\n\r\n    consume_char() {\r\n        if (this.curChar == '\\n') {\r\n        } else if (this.curChar == ' ') {\r\n            this.input_stream.spaceDetected();\r\n        }\r\n\r\n    }\r\n}\r\n","import JsonMap from \"../json/JsonMap\";\r\nimport JsonList from \"../json/JsonList\";\r\nimport RJsonAbsParser from \"./RJsonAbsParser\";\r\nimport RJsonParserError from \"./RJsonParserError\";\r\n\r\nvar logger = require('../logger/logger');\r\n\r\nexport default class RJsonParser extends RJsonAbsParser {\r\n\r\n    constructor(rinput, startNow) {\r\n        super(rinput, startNow);\r\n    }\r\n\r\n    parse() {\r\n\r\n        var toReturn = this.anything();\r\n        toReturn.root = true;\r\n        toReturn.rawInput = this.input;\r\n        if (!this.ensureEOF()) {\r\n            throw new Error(\"parser.expectedEOF\");\r\n        }\r\n        return toReturn;\r\n\r\n    }\r\n\r\n    anything() {\r\n        logger.debug(\"RJsonParser::anything()\" + this.jj_nt);\r\n        let x;\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n                x = this.object();\r\n                break;\r\n            case this.BRACKET_OPEN:\r\n                x = this.list();\r\n                break;\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                x = this.value();\r\n                break;\r\n            case this.BRACKET_CLOSE:\r\n                break;\r\n            default:\r\n                this.jj_la1[0] = this.jj_gen;\r\n                this.jj_consume_token(-1);\r\n                throw new RJsonParserError();\r\n        }\r\n        { if (true) return x; }\r\n    }\r\n\r\n    object() {\r\n        let map = new JsonMap(true, false, new Map());\r\n        let key, value;\r\n        this.jj_consume_token(this.BRACE_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n            case this.SYMBOL:\r\n                key = this.objectKey();\r\n                this.jj_consume_token(this.COLON);\r\n                value = this.anything();\r\n                value.key = true;\r\n                map.put(key, value);\r\n                key = null; value = null;\r\n                label_1:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[3] = this.jj_gen;\r\n                            break label_1;\r\n                    }\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    this.jj_consume_token(this.COMMA);\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    key = this.objectKey();\r\n                    if (!key)\r\n                        break;\r\n                    this.jj_consume_token(this.COLON);\r\n                    value = this.anything();\r\n                    value.key = true;\r\n                    map.put(key, value);\r\n                    key = null; value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[4] = this.jj_gen;\r\n        }\r\n        this.jj_consume_token(this.BRACE_CLOSE);\r\n        { if (true) return map; }\r\n    }\r\n\r\n    list() {\r\n        let list = new JsonList(true, false, []);\r\n        logger.debug(\"RJsonParser::list()\" + this.jj_nt.toString());\r\n        let value;\r\n        this.jj_consume_token(this.BRACKET_OPEN);\r\n        switch (this.jj_nt.kind) {\r\n            case this.BRACE_OPEN:\r\n            case this.BRACKET_OPEN:\r\n            case this.NUMBER_INTEGER:\r\n            case this.NUMBER_DECIMAL:\r\n            case this.TRUE:\r\n            case this.FALSE:\r\n            case this.NULL:\r\n            case this.STRING_SINGLE_EMPTY:\r\n            case this.STRING_DOUBLE_EMPTY:\r\n            case this.STRING_SINGLE_NONEMPTY:\r\n            case this.STRING_DOUBLE_NONEMPTY:\r\n                value = this.anything();\r\n                list.add(value);\r\n                value = null;\r\n                label_2:\r\n                while (true) {\r\n                    switch (this.jj_nt.kind) {\r\n                        case this.COMMA:\r\n                            ;\r\n                            break;\r\n                        default:\r\n                            this.jj_la1[5] = this.jj_gen;\r\n                            break label_2;\r\n                    }\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    this.jj_consume_token(this.COMMA);\r\n                    logger.debug('^^^^^^^^->' + this.jj_nt.kind);\r\n                    value = this.anything();\r\n                    if(!value)\r\n                        break;\r\n                    list.add(value);\r\n                    value = null;\r\n                }\r\n                break;\r\n            default:\r\n                this.jj_la1[6] = this.jj_gen;\r\n                ;\r\n        }\r\n        this.jj_consume_token(this.BRACKET_CLOSE);\r\n        { if (true) return list; }\r\n    }\r\n\r\n\r\n\r\n    ensureEOF() {\r\n        this.jj_consume_token(0);\r\n        { if (true) return true; }\r\n    }\r\n\r\n    jj_consume_token(kind) {\r\n\r\n        logger.debug(\"01-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        var oldToken = this.token;\r\n        if ((this.token = this.jj_nt).next != null) {\r\n            this.jj_nt = this.jj_nt.next;\r\n        } else {\r\n            this.jj_nt = this.jj_nt.next = this.lexer.getNextToken();\r\n            logger.debug(\"02-RJsonParser::jj_consume_token::this.jj_nt=\" + this.jj_nt + \",cKind=\" + kind + \",this.jj_nt.next=\" + this.jj_nt.next);\r\n        }\r\n        logger.debug('token.kind=' + this.token.kind);\r\n\r\n        if (this.token.kind === kind) {\r\n            logger.debug(\"03-RJsonParser::jj_consume_token::matched(this.token.kind)\" + this.token.kind + \",ckind=\" + kind);\r\n            this.jj_gen++;\r\n            return this.token;\r\n        }\r\n\r\n\r\n        this.jj_nt = this.token;\r\n        this.token = oldToken;\r\n        this.jj_kind = kind;\r\n        //logger.debug('-------------------');\r\n        var parserError = this.generateParseException();\r\n        //logger.debug('-------------------' + e.message);\r\n        throw parserError;\r\n    }\r\n\r\n    generateParseException() {\r\n        logger.debug('generateParseException');\r\n        var jj_expentries = [];\r\n        var la1tokens = [];\r\n        var jj_expentry = [];\r\n        var i, j, k, l;\r\n        if (this.jj_kind >= 0) {\r\n            la1tokens[this.jj_kind] = true;\r\n            this.jj_kind = -1;\r\n        }\r\n        for (i = 0; i < 13; i++) {\r\n            if (this.jj_la1[i] == this.jj_gen) {\r\n                for (j = 0; j < 32; j++) {\r\n                    if ((this.jj_la1_0[i] & (1 << j)) != 0) {\r\n                        la1tokens[j] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        for (k = 0; k < 29; k++) {\r\n            if (la1tokens[k]) {\r\n                jj_expentry[0] = k;\r\n                jj_expentries.push(jj_expentry);\r\n            }\r\n        }\r\n        var exptokseq = [];\r\n        for (l = 0; l < jj_expentries.size; l++) {\r\n            exptokseq[l] = jj_expentries[l];\r\n        }\r\n\r\n        var e = new RJsonParserError(this.token, exptokseq, this.tokenImage);\r\n        logger.debug('generateParseException ::' + e.getMessage());\r\n        return e;\r\n    }\r\n\r\n    static runParser(input) {\r\n        var instance = new RJsonParser(input);\r\n        var jsonObject = instance.parse();\r\n        return jsonObject;\r\n    }\r\n}\r\n\r\nexport function runParser(input) {\r\n    RJsonParser.runParser(input);\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonParserError extends Error {\r\n\r\n    constructor(_currentTokenVal, _expectedTokenSequencesVal, _tokenImageVal) {\r\n        super();\r\n        this.name = \"RJsonParserError\"; \r\n        this.currentToken = _currentTokenVal;\r\n        this.expectedTokenSequences = _expectedTokenSequencesVal;\r\n        this.tokenImage = _tokenImageVal;\r\n        this.eol = \"&\";\r\n    }\r\n\r\n    getMessage() {\r\n        let expected = '';\r\n        let maxSize, i, j = 0;\r\n        for (i = 0; i < this.expectedTokenSequences.length; i++) {\r\n            if (maxSize < this.expectedTokenSequences[i].length) {\r\n                maxSize = this.expectedTokenSequences[i].length;\r\n            }\r\n            for (j = 0; j < this.expectedTokenSequences[i].length; j++) {\r\n                expected += this.tokenImage[this.expectedTokenSequences[i][j]] + ' ';\r\n            }\r\n            if (this.expectedTokenSequences[i][this.expectedTokenSequences[i].length - 1] != 0) {\r\n                expected += \"...\";\r\n            }\r\n            expected += eol + \"    \";\r\n        }\r\n\r\n        let retval = \"Encountered \\\"\";\r\n        let tok = this.currentToken.next;\r\n        for (i = 0; i < maxSize; i++) {\r\n            if (i != 0) retval += \" \";\r\n            if (tok.kind == 0) {\r\n                retval += this.tokenImage[0];\r\n                break;\r\n            }\r\n            retval += \" \" + this.tokenImage[tok.kind];\r\n            retval += \" \\\"\";\r\n            retval += this.add_escapes(tok.image);\r\n            retval += \" \\\"\";\r\n            tok = tok.next;\r\n        }\r\n\r\n        retval += \"\\\" at line \" + this.currentToken.next.beginLine + \", column \" + this.currentToken.next;\r\n        retval += \".\" + this.eol;\r\n        if (this.expectedTokenSequences.length == 1) {\r\n            retval += \"Was expecting:\" + this.eol + \"    \";\r\n        } else {\r\n            retval += \"Was expecting one of:\" + this.eol + \"    \";\r\n        }\r\n        retval += expected;\r\n        this.message = retval;\r\n        logger.debug(this.message);\r\n        return retval;\r\n    }\r\n\r\n    addEscapes(str) {\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        return retval.toString();\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonToken {\r\n    constructor(ofkind,nimage) {\r\n        this._kind = ofkind;\r\n        this._image = nimage;\r\n        this._next = null;\r\n        this.specialToken = null;\r\n    }\r\n\r\n    set next(newNext) {\r\n        this._next = newNext;\r\n    }\r\n\r\n    get next() {\r\n        return this._next;\r\n    }\r\n\r\n    set beginLine(line) {\r\n        this._beginLine = line;\r\n    }\r\n\r\n    get beginLine() {\r\n        return this._beginLine;\r\n    }\r\n\r\n    set endLine(line) {\r\n        this._endLine = line;\r\n    }\r\n\r\n    set beginColumn(column) {\r\n        this._beginColumn = column;\r\n    }\r\n\r\n    get beginColumn() {\r\n        return this._beginColumn;\r\n    }\r\n\r\n    set endColumn(column) {\r\n        this._endColumn = column;\r\n    }\r\n\r\n    get kind() {\r\n        return this._kind;\r\n    }\r\n\r\n    set kind(newKind) {\r\n        this._kind = newKind;\r\n    }\r\n\r\n    get image() {\r\n        logger.debug('returning from token image length ->' + this._image.length);\r\n        return this._image;\r\n    }\r\n\r\n    static newToken(kind,image) {\r\n        return new RJsonToken(kind,image);\r\n    }\r\n\r\n    toString() {\r\n     return \"kind=\" + this._kind + \",image=\" + this.image;\r\n    }\r\n}","var logger = require('../logger/logger');\r\n\r\nexport default class RJsonTokenMgrError {\r\n    static addEscapes(str) {\r\n        //logger.debug('addEscapes)' + str);\r\n        let i,ch;\r\n        let retval = \"\";\r\n        for (i = 0; i < str.length; i++) {\r\n            switch (str.charAt(i)) {\r\n                case 0:\r\n                    continue;\r\n                case '\\b':\r\n                    retval += \"\\\\b\";\r\n                    continue;\r\n                case '\\t':\r\n                    retval += \"\\\\t\";\r\n                    continue;\r\n                case '\\n':\r\n                    retval += \"\\\\n\";\r\n                    continue;\r\n                case '\\f':\r\n                    retval += \"\\\\f\";\r\n                    continue;\r\n                case '\\r':\r\n                    retval += \"\\\\r\";\r\n                    continue;\r\n                case '\\\"':\r\n                    retval += \"\\\\\\\"\";\r\n                    continue;\r\n                case '\\'':\r\n                    retval += \"\\\\\\'\";\r\n                    continue;\r\n                case '\\\\':\r\n                    retval += \"\\\\\\\\\";\r\n                    continue;\r\n                default:\r\n                    if ((ch = str.charAt(i)) < 0x20 || ch > 0x7e) {\r\n                        var s = \"0000\" + ch.toString();\r\n                        retval += \"\\\\u\" + s.substring(s.length - 4, s.length);\r\n                        //logger.debug('retval' + retval);\r\n                    } else {\r\n                        retval += ch;\r\n                    }\r\n                    continue;\r\n            }\r\n        }\r\n        //logger.debug('8888' + retval.toString());\r\n        return retval.toString();\r\n    }\r\n\r\n    static LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar) {\r\n        let code = curChar.charCodeAt();\r\n        //logger.debug('LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar)');\r\n        var res = \"Lexical error at line \" +\r\n            errorLine + \", column \" +\r\n            errorColumn + \".  Encountered: \" +\r\n            (EOFSeen ? \"<EOF> \" : (\"\\\"\" + RJsonTokenMgrError.addEscapes(curChar) + \"\\\"\") + \" (\" + code + \"), \") +\r\n            \"after : \\\"\" + RJsonTokenMgrError.addEscapes(errorAfter) + \"\\\"\";\r\n        //logger.debug(res);\r\n    }\r\n\r\n    constructor(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar, reason) {\r\n        this.message = RJsonTokenMgrError.LexicalError(EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar);\r\n        this.reason = reason;\r\n    }\r\n}"],"sourceRoot":""}